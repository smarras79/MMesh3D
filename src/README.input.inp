#Input file: you are not supposed to change the order in this file
_GEOMETRY_:
xlength		10.0	#Lenght of the domain in the x-direction: [whichever unit you want]
ylength		10.0	#Lenght of the domain in the y-direction: [whichever unit you want]
xmin_obs	0.0	#starting x-position of the obstacle
xmax_obs	0.0	#end x-position of the obstacle
ymin_obs	0.0	#starting y-position of the obstacle
ymax_obs	0.0	#end y-position of the obstacle
_GRID_ELEMENTS:
imax		10	#number of grid points in x
jmax		10	#number of grid points in y
imax_obs	0	#number of grid points along the obstacle in x
jmax_obs	0	#number of grid points along the obstacle in y
_BOUNDARIES_:
w_boun		2	#WEST boundary condition on the domain
e_boun		2	#EAST boundary condition on the domain
n_boun		2	#NORTH boundary condition on the domain
s_boun		2	#SOUTH boundary condition on the domain
obs_w_boun	2	#WEST wall b.c. on the obstacle
obs_e_boun	2	#EAST wall b.c. on the obstacle
obs_n_boun	2	#NORTH wall b.c. on the obstacle
obs_s_boun	2	#SOUTH wall b.c. on the obstacle
_OUTPUT_:
output		output	#Output file name: this name is what comes before the *.vtk or *.txt
vtk		1	#Print the mesh in the VTK format
txt		0	#Print the mesh in a *.txt file
_GRID_DISTRIBUTION_:
grd_type_x	2	//Vector of 3 elements: each element can be either any integer that defines a type of
grd_type_y	1	//grid points distribution. This should be defined by the user in the input.inp file.
grd_type_z	1	//	1 <-- uniform grid with equispaced grid points
			//	2 <-- exponential grid points distribution from left to right [x(i)=exp(i)-1]
			//	3 <-- like 2, but from right to left (TO BE CODED YET)
			//
			//	Ex.:
			//	grd_type[2, 1, 1] means: that in x we want an exponential distribution,
			//				 while in y and z a uniform grid.